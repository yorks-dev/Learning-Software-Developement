1. Sum of the numbers of a digit.
-------------------------------
> Pseudocode.

while(num > 0){
     sum += num % 10;
     num /= 10;
} 

cout << sum << endl;

-----------------------------------
2. NOTE :  n bits given.
> Total number = 2^n
> Max number = 2^n - 1

--------------------------------

3. Represent negetive number in binary.
--------------------------------------
> Using 2's compliment.

Say -5    [The first bit will be a 1] (Computer actually does not use this 
-> 0101 (4 bits)

> 1's complement > 1010   (rverse the bits)
> 2's complement > 1's complement + 1
                 > 1011   (-5 binary)

NOTE :  To read -ve number (-x)
        > Look at MSB (Most significant bit) if its -ve
	> Take 2's complement.  (-x)

say 1011   > MSB -ve
	   > 2's complement > 0100 + 1 > 0101
	   > 0101 is 5 so number is -5


NOTE : if n bits -ve number
     > first bit is MSP, so 2's complement is taken from the rest (n-1) bit  [1|011001...01101]
     > 2^(n-1) - 1 numbers

-----------------------------------------------------------

